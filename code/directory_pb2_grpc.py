# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import directory_pb2 as directory__pb2


class DirectoryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_file_address = channel.unary_unary(
        '/Directory.Directory/get_file_address',
        request_serializer=directory__pb2.File.SerializeToString,
        response_deserializer=directory__pb2.FileInfo.FromString,
        )
    self.add_file_address = channel.unary_unary(
        '/Directory.Directory/add_file_address',
        request_serializer=directory__pb2.AddFileInfo.SerializeToString,
        response_deserializer=directory__pb2.Bool.FromString,
        )
    self.del_file_address = channel.unary_unary(
        '/Directory.Directory/del_file_address',
        request_serializer=directory__pb2.FileSimpleInfo.SerializeToString,
        response_deserializer=directory__pb2.Bool.FromString,
        )
    self.get_file_all_address = channel.unary_stream(
        '/Directory.Directory/get_file_all_address',
        request_serializer=directory__pb2.File.SerializeToString,
        response_deserializer=directory__pb2.FileInfo.FromString,
        )
    self.get_all_file = channel.unary_stream(
        '/Directory.Directory/get_all_file',
        request_serializer=directory__pb2.File.SerializeToString,
        response_deserializer=directory__pb2.FileInfo.FromString,
        )
    self.get_all_server = channel.unary_stream(
        '/Directory.Directory/get_all_server',
        request_serializer=directory__pb2.File.SerializeToString,
        response_deserializer=directory__pb2.ClientIP.FromString,
        )


class DirectoryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_file_address(self, request, context):
    """获取文件的IP,port的列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def add_file_address(self, request, context):
    """添加文件所在的路径
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def del_file_address(self, request, context):
    """删除文件所在的路径
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_file_all_address(self, request, context):
    """获取存取该文件的所有 file服务器的信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_all_file(self, request, context):
    """获取所有的文件信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_all_server(self, request, context):
    """获取所有的文件服务器的ip，port
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DirectoryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_file_address': grpc.unary_unary_rpc_method_handler(
          servicer.get_file_address,
          request_deserializer=directory__pb2.File.FromString,
          response_serializer=directory__pb2.FileInfo.SerializeToString,
      ),
      'add_file_address': grpc.unary_unary_rpc_method_handler(
          servicer.add_file_address,
          request_deserializer=directory__pb2.AddFileInfo.FromString,
          response_serializer=directory__pb2.Bool.SerializeToString,
      ),
      'del_file_address': grpc.unary_unary_rpc_method_handler(
          servicer.del_file_address,
          request_deserializer=directory__pb2.FileSimpleInfo.FromString,
          response_serializer=directory__pb2.Bool.SerializeToString,
      ),
      'get_file_all_address': grpc.unary_stream_rpc_method_handler(
          servicer.get_file_all_address,
          request_deserializer=directory__pb2.File.FromString,
          response_serializer=directory__pb2.FileInfo.SerializeToString,
      ),
      'get_all_file': grpc.unary_stream_rpc_method_handler(
          servicer.get_all_file,
          request_deserializer=directory__pb2.File.FromString,
          response_serializer=directory__pb2.FileInfo.SerializeToString,
      ),
      'get_all_server': grpc.unary_stream_rpc_method_handler(
          servicer.get_all_server,
          request_deserializer=directory__pb2.File.FromString,
          response_serializer=directory__pb2.ClientIP.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Directory.Directory', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
